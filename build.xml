<project name="Black Swan" default="compile" basedir=".">

    <!-- Name of project and version -->
    <property name="proj.name"      value="Black Swan"/>
    <property name="proj.shortname" value="blackswan"/>
    <property name="version"        value="1.0"/>

    <!-- Global properties for this build -->
    <property name="database.dir"           value="database"/>
    <property name="src.java.dir"           value="src"/>
    <property name="lib_hibernate.dir"      value="lib_hibernate"/>
    <property name="lib_tomcat.dir"         value="lib_tomcat"/>
	<property name="lib_jfreechart.dir"		value="lib_jfreechart"/>
    <property name="build.dir"              value="build"/>

	<property name="webapp.name"			value="myapp"/>
	
	<property file="etc/tomcat.properties"/>
	<taskdef file="etc/tomcatTask.properties">
	        <classpath>
	            <pathelement path="lib_tomcat/catalina-ant.jar"/>
	        </classpath>
    </taskdef>

    <!-- Classpath declaration -->
    <path id="project.classpath">
    	<fileset dir="${lib_tomcat.dir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>
        <fileset dir="${lib_hibernate.dir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>
        <fileset dir="${lib_jfreechart.dir}">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>
    </path>

    <!-- Useful shortcuts -->
    <patternset id="meta.files">
        <include name="**/*.xml"/>
        <include name="**/*.properties"/>
    </patternset>

    <!-- Clean up -->
    <target name="clean" description="Clean the build directory">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
    </target>

    <!-- Compile Java source -->
    <target name="compile">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.java.dir}"
               destdir="${build.dir}"
               classpathref="project.classpath"/>
    </target>

    <!-- Copy metadata to build classpath -->
    <target name="copymetafiles">
        <mkdir dir="${build.dir}"/>
        <copy todir="${build.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>
    </target>
	

    <!-- Hibernate Tools import -->
    <taskdef name="hibernatetool"
             classname="org.hibernate.tool.ant.HibernateToolTask"
             classpathref="project.classpath"/>

    <!-- Export the database schema -->
    <target name="schemaexport" depends="compile, copymetafiles"
        description="Exports a generated schema to DB and file">

        <hibernatetool destdir="${basedir}">
            <classpath path="${build.dir}"/>
            <annotationConfiguration
                configurationfile="${build.dir}/hibernate.cfg.xml"/>
            <hbm2ddl
                drop="true"
                create="true"
                export="true"
                outputfilename="${proj.shortname}-ddl.sql"
                delimiter=";"
                format="true"/>
        </hibernatetool>
    </target>

	<target name="make_war">
		<war destfile="myapp.war" webxml="web.xml">
		  <fileset dir="web"/>
		  <fileset dir="jsps"/>
		  <lib dir="${lib_jfreechart.dir}"/>
		  <lib dir="${lib_hibernate.dir}"/>
		  <classes dir="bin"/>
		  <zipfileset dir="images" prefix="images"/>
		</war>
		
	</target>	

	<target name="copy_war" depends="make_war">
		<copy file="myapp.war" tofile="/usr/local/apache-tomcat-7.0.11/webapps/myapp.war"></copy>
	</target>	
	
	<target name="deploy" depends="stop, remove, install, start">
		</target>
	
    <target name="install" description="Install application in Tomcat"
        depends="make_war">
        <deploy url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${webapp.name}"
            war="file:myapp.war"/>
    </target>

    <target name="remove" description="Remove application in Tomcat">
        <undeploy url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${webapp.name}"/>
    </target>

    <target name="reload" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${webapp.name}"/>
    </target>

    <target name="start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${webapp.name}"/>
    </target>

    <target name="stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${webapp.name}"/>
    </target>

    <target name="list" description="List Tomcat applications">
        <list url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"/>
    </target>

	
	
	
</project>
